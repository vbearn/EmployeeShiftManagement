{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/settings.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<app-nav></app-nav>\n\n<div class=\"container\">\n  <div class=\"starter-template\">\n    <h1>Employee Shift Calculator</h1>\n  </div>\n\n  <h3></h3>\n\n  <div class=\"form-group\">\n    <div class=\"row\">\n      <div class=\"col-lg-4\">\n        <label for=\"totalEmplyees\">Total number of employees</label>\n        <input class=\"form-control\" id=\"totalEmplyees\" [(ngModel)]=\"totalEmployees\" type=\"text\">\n      </div>\n      <div class=\"col-lg-4\">\n        <label for=\"totalDays\">Total number of days (including holidays)</label>\n        <input class=\"form-control\" id=\"totalDays\" [(ngModel)]=\"totalDays\" type=\"text\">\n      </div>\n      <div class=\"col-lg-4 checkbox\">\n        <label>Holidays are off\n          <input class=\"form-control\" id=\"holidaysOff\" [(ngModel)]=\"holidaysOff\" type=\"checkbox\" /></label>\n      </div>\n    </div>\n    <div class=\"row mt-3 \">\n      <div class=\"col-lg-4\">\n        <label for=\"firstShiftEmployee\">Employee for \"First Shift\" on day 1</label>\n        <input class=\"form-control\" id=\"firstShiftEmployee\" [(ngModel)]=\"firstShiftEmployee\" type=\"text\" placeholder=\"Enter the number (id) of employee\">\n      </div>\n      <div class=\"col-lg-4\">\n        <label for=\"secondShiftEmployee\">Employee for \"Second Shift\" on day 1</label>\n        <input class=\"form-control\" id=\"secondShiftEmployee\" [(ngModel)]=\"secondShiftEmployee\" type=\"text\" placeholder=\"Enter the number (id) of employee\">\n      </div>\n    </div>\n    <div class=\"row mt-3 \">\n      <div class=\"col-lg-12 text-left\">\n        <button type=\"button\" class=\"btn btn-primary text-right\" (click)=\"calculateClicked()\">Calculate Shifts</button>\n      </div>\n    </div>\n    <div class=\"row mt-5\">\n      <table class=\"table table-striped  mb-5\">\n        <thead>\n          <tr>\n            <th>Day #</th>\n            <th>First Shift</th>\n            <th>Second Shift</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let day of calculatedDays \">\n            <td>{{day.day}}</td>\n            <td>{{day.firstShiftEmployee}}</td>\n            <td>{{day.secondShiftEmployee}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n\n</div>","import { Component } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Settings } from '../settings';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  totalEmployees: number = 10;\n  totalDays: number = 14;\n  holidaysOff: boolean = true;\n  \n  firstShiftEmployee: number = 1;\n  secondShiftEmployee: number = 2;\n\n  calculatedDays: any[];\n\n  constructor(\n    private http: Http\n  ) {\n\n\n  }\n\n  calculateClicked() {\n\n    this.calculatedDays = [];\n\n    let calculateModel = {\n      TotalEmployees: this.totalEmployees,\n      FirstShiftEmployee: this.firstShiftEmployee,\n      SecondShiftEmployee: this.secondShiftEmployee,\n      totalDays: this.totalDays,\n      holidaysOff: this.holidaysOff,\n    };\n\n    this.http.post(Settings.GET_SERVICE_URL(), calculateModel).subscribe(result => {\n      let resultJson = result.json();\n      this.calculatedDays = resultJson.days;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n  ],\n  imports: [\n    FormsModule,\n    HttpModule,\n    BrowserModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark fixed-top\">\n  <a class=\"navbar-brand\" href=\"#\">Company X</a>\n  <div class=\"collapse navbar-collapse\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"mailto:mm.nakhaie@gmail.com\">Contact</a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"https://github.com/vbearn\"><i class=\"fa fa-github\" aria-hidden=\"true\"></i></a>\n      </li>\n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export class Settings {\r\n\r\n    // when debugging, set this field to the address of backend service. e.g: SERVICE_URL = \"http://172.22.143.228/api/schedule\"\r\n    // when empty, it is considered as the current location that the page is opened into\r\n    private static SERVICE_URL = \"\";\r\n\r\n    public static GET_SERVICE_URL() {\r\n        if (this.SERVICE_URL)\r\n            return this.SERVICE_URL;\r\n        else {\r\n            let port = \"\";\r\n            if (window.location.port)\r\n                port = `:${window.location.port}`;\r\n            return `${window.location.protocol}//${window.location.hostname}${port}/api/schedule`;\r\n        }\r\n    }\r\n\r\n}"],"sourceRoot":""}